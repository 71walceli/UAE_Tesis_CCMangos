
services:
  # frontend Mobile
  react-native-dev:
    build: 
      context: ./App
    environment:
      TZ: America/Guayaquil
      DISPLAY: $DISPLAY
      ADB_ENDPOINTS: 192.168.0.104:55554,192.168.67.5:55554
      API_BASE_URL: http://192.168.67.245:8080/api/
      DEFAULT_USERNAME: walecel
      DEFAULT_PASSWORD: p4s$w0rD
    entrypoint: bash ./boot.sh
    hostname: react-native-dev
    networks:
      tesis-vpn:
        ipv4_address: 192.168.67.243
    stop_grace_period: 1s
    user: "1000:1000"
    volumes:
      - ./App:/Project
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./App/Data:/home/AndroidStudio
      - ./Common:/Common
    working_dir: /Project
  react-native-production-build:
    build: 
      context: ./App
    environment:
      TZ: America/Guayaquil
      ADB_ENDPOINT: 192.168.0.104:55554
      API_BASE_URL: https://ccmangos.71walceli.beauty/api
      #DEFAULT_USERNAME: walecel
      #DEFAULT_PASSWORD: p4s5w0rD
      KEY_PASSPHRASE: p4s5w0rD
      APP_ID_SUFFIX: staging
      #CLEAN: "true"
    entrypoint: bash ./build.sh
    stop_grace_period: 1s
    user: "1000:1000"
    volumes:
      - ./App:/Project
      - ./App/Data:/home/AndroidStudio
      - ./Common:/Common
    working_dir: /Project

  # Frontend Web
  web:
    entrypoint: bash boot.sh
    environment:
      REACT_APP_API_BASE_URL: http://192.168.67.245:8080/api/
    hostname: web
    image: node:20
    networks:
      tesis-vpn:
        ipv4_address: 192.168.67.244
    stop_grace_period: 1s
    user: "1000:1000"
    volumes:
      - ./Web:/App
      - ./Common:/Common
    working_dir: /App
    restart: unless-stopped
  
  # Backend
  django:
    build:
      context: ./Backend
      args:
        UID: 1000
        GID: 1000
      dockerfile: django.Dockerfile
    environment:
      DEBUG: "True"
      PYTHONUNBUFFERED: "1"
    depends_on:
      - postgres
    hostname: django
    networks:
      tesis-vpn:
        ipv4_address: 192.168.67.245
      backend:
    restart: unless-stopped
    stop_grace_period: 3s
    user: "1000:1000"
    volumes:
      - ./Backend:/App
      - ./Backend/Data/uploads:/Uploads
    working_dir: /App
    
  predictive-api:
    build:
      context: ./PredictiveAPI/
      args:
        UID: 1000
        GID: 1000
      dockerfile: fastAPI.Dockerfile
    depends_on:
      - django
    env_file:
      - ./PredictiveAPI/.env
    hostname: predictive-api
    networks:
      tesis-vpn:
        ipv4_address: 192.168.67.242
      backend:
    restart: unless-stopped
    stop_grace_period: 1s
    user: "1000:1000"
    volumes:
      - ./PredictiveAPI/App:/App
      - ./PredictiveAPI/Data:/Data
      - ./PredictiveModel/Notebooks:/Lib
    working_dir: /App
  
  postgres:
    build:
      context: ./Backend
      args:
        UID: 1000
        GID: 1000
      dockerfile: postgres.Dockerfile
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    image: ghcr.io/71walceli/uae_tesis_ccmangos_postgres:1.1.0
    hostname: postgres
    networks:
      backend:
    restart: unless-stopped
    stop_grace_period: 10s
    user: "1000:1000"
    volumes:
      - ./Backend/Data/postgresql:/var/lib/postgresql/data

  # Machine Learning Core
  predictive-model-training:
    build:
      context: ./PredictiveModel
      args:
        UID: 1000
        GID: 1000
    hostname: predictive-model-training
    networks:
      tesis-vpn:
        ipv4_address: 192.168.67.246
      #backend:
    restart: unless-stopped
    shm_size: 8gb
    stop_grace_period: 1s
    user: "1000:1000"
    volumes:
      - ./PredictiveModel/Config:/Config
      - ./PredictiveModel/Notebooks:/Notebooks
      - ./PredictiveModel/Content:/content
networks:
  tesis-vpn:
    driver: bridge
    driver_opts: 
      com.docker.network.driver.mtu: 1400
    ipam: 
      config:
        - subnet: 192.168.67.240/29
          gateway: 192.168.67.241
  backend:
